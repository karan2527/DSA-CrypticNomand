var C=Object.defineProperty;var S=(g,p,e)=>p in g?C(g,p,{enumerable:!0,configurable:!0,writable:!0,value:e}):g[p]=e;var o=(g,p,e)=>S(g,typeof p!="symbol"?p+"":p,e);import{P as h,n as D}from"./index-Cs6O3ldV.js";class B extends h.GameObjects.Sprite{constructor(e,t,s,i,a,d,r,c){super(e,t,s,i,a);o(this,"id");o(this,"topic");this.id=d,this.topic=r,this.name=c,e.add.existing(this)}}class G extends h.Scene{constructor(){super("WorldScene");o(this,"player");o(this,"grassZones");o(this,"yellowGrassZones");o(this,"redGrassZones");o(this,"cursors");o(this,"spaceKey");o(this,"map");o(this,"obstacles");o(this,"npcs");o(this,"messageText");o(this,"messageBox");o(this,"messageVisible",!1);o(this,"messageTimer",0);o(this,"speed",500);o(this,"currentPlayerDirection","down");o(this,"mapScale",2);o(this,"showDebugBounds",!0);o(this,"graphics");o(this,"difficulty");o(this,"topic");o(this,"greenGraphics");o(this,"redGraphics");o(this,"yellowGraphics");o(this,"npcsNerd",[]);o(this,"interactionZone");o(this,"interactionKey");o(this,"interactionPrompt");o(this,"userCoordinates",{x:1360,y:2750})}preload(){this.load.on("filecomplete",e=>{console.log(`Asset loaded: ${e}`)}),this.load.on("complete",()=>{console.log("All assets loaded"),this.textures.exists("player")?(console.log("Player texture loaded successfully"),console.log("Player texture frames:",this.textures.get("player").frameTotal)):console.log("Player texture FAILED to load")}),this.load.spritesheet("player","player.png",{frameWidth:12,frameHeight:20}),this.load.spritesheet("npcs","blueguy.png",{frameWidth:60,frameHeight:60}),this.load.spritesheet("nerdnpecs","npcs.png",{frameWidth:60,frameHeight:60})}createNerdNPCs(){[{id:"professor_tree",x:652.8181216087671,y:559.5262145875631,frame:0,topic:"bst",name:"Professor Oak"},{id:"professor_tree",x:1332.2621458756246,y:246.91780967929733,frame:1,topic:"bst",name:"Pritam"},{id:"algorithm_master",x:741.3443361963309,y:1030.9229799590119,frame:2,topic:"linkedList",name:"Dr. Dynamic"},{id:"network_guru",x:485.0025851398573,y:1890.6336580776644,frame:3,topic:"Sorting",name:"Graph Master"},{id:"data_organizer",x:1457.3637567824637,y:2457.6938426723746,frame:4,topic:"Array",name:"Sorter Sam"}].forEach(t=>{const s=new B(this,t.x,t.y,"npcs",t.frame,t.id,t.topic,t.name);this.npcsNerd.push(s),this.physics.add.existing(s)})}setupInteraction(){this.interactionKey=this.input.keyboard.addKey(h.Input.Keyboard.KeyCodes.E),this.interactionZone=this.add.zone(this.player.x,this.player.y,60,60),this.physics.world.enable(this.interactionZone),this.interactionPrompt=this.createInteractionPrompt(),this.interactionPrompt.setVisible(!1)}createInteractionPrompt(){const e=this.add.container(0,0),t=this.add.rectangle(0,0,120,40,0,.7).setStrokeStyle(2,16777215),s=this.add.text(0,0,"Press E",{fontSize:"14px",color:"#FFFFFF"}).setOrigin(.5);return e.add([t,s]),e}checkNPCProximity(){let e=!1,t=null,s=1/0;this.npcsNerd.forEach(i=>{const a=h.Math.Distance.Between(this.player.x,this.player.y,i.x,i.y);a<60&&(e=!0,a<s&&(s=a,t=i))}),e&&t?(this.interactionPrompt.setPosition(t.x,t.y-50),this.interactionPrompt.setVisible(!0),h.Input.Keyboard.JustDown(this.interactionKey)&&this.interactWithNPC(t)):this.interactionPrompt.setVisible(!1)}interactWithNPC(e){console.log(`Interacting with ${e.name} (${e.id})`),this.showNPCDialog(e)}showNPCDialog(e){const t=this.player.x,s=this.player.y+100,i=400,a=150,d=this.add.rectangle(t,s,i,a,0,.8).setStrokeStyle(2,16777215),r=this.add.text(t-i/2+20,s-a/2+15,e.name,{fontSize:"18px",color:"#FFFFFF",fontStyle:"bold"}),c=this.add.text(t-i/2+20,s-a/2+45,this.getNPCDialog(e.topic),{fontSize:"16px",color:"#FFFFFF",wordWrap:{width:i-40}}),n=this.add.rectangle(t+i/2-15,s-a/2+15,24,24,16729156).setInteractive(),y=this.add.text(n.x,n.y,"X",{fontSize:"16px",color:"#FFFFFF"}).setOrigin(.5),l=this.add.rectangle(t,s+a/2-25,150,40,4474111).setInteractive(),u=this.add.text(l.x,l.y,"Learn More",{fontSize:"16px",color:"#FFFFFF"}).setOrigin(.5),m=this.add.container(0,0,[d,r,c,n,y,l,u]),F=e.x,P=e.y,f=()=>{m.destroy(),this.events.off("update",w)};n.on("pointerdown",f),n.on("pointerover",()=>{n.setFillStyle(16737894)}),n.on("pointerout",()=>{n.setFillStyle(16729156)}),l.on("pointerdown",()=>{f(),this.scene.start("DynamicLearningScene",{topic:e.topic})}),l.on("pointerover",()=>{l.setFillStyle(6711039)}),l.on("pointerout",()=>{l.setFillStyle(4474111)});const w=()=>{const x=Math.abs(this.player.x-F),b=Math.abs(this.player.y-P);Math.sqrt(x*x+b*b)>150&&f()};this.events.on("update",w)}getNPCDialog(e){const t={bst:"Want to learn about Binary Search Trees? I've got a great tutorial that will help you understand tree structures and traversal algorithms.",dynamic:"Dynamic Programming is a powerful technique for solving complex problems. I can show you how to master it with some practical examples.",graphs:"Graphs are everywhere in computer science! Let me show you how to work with graph algorithms and solve real-world network problems.",sorting:"Sorting algorithms are fundamental to computer science. I can teach you about different sorting methods and when to use each one.",default:"I'd be happy to teach you about algorithms and data structures. What would you like to learn?"};return t[e]||t.default}create(){console.log("Loaded textures:",Object.keys(this.textures.list)),this.textures.exists("player")?console.log("Player texture exists with frames:",this.textures.get("player").frameTotal):console.log("Player texture failed to load"),this.textures.exists("npcs")?console.log("NPC texture exists with frames:",this.textures.get("npcs").frameTotal):console.log("NPC texture failed to load"),this.createWorld(),this.createPlayer(),this.greenGraphics=this.add.graphics(),this.redGraphics=this.add.graphics(),this.yellowGraphics=this.add.graphics(),this.setupCamera(),this.setupInput(),this.createObstacles(),this.createNPCs(),this.createNerdNPCs(),this.setupInteraction(),this.graphics=this.add.graphics(),this.randomizeGrassZones(),this.randomRedGrass(),this.randomYellowGrass(),this.graphics=this.add.graphics(),this.graphics.fillStyle(65280,1),this.grassZones.forEach(e=>{this.graphics.fillRect(e.x,e.y,e.width,e.height)}),this.createMessageDisplay(),this.physics.add.collider(this.player,this.obstacles),this.physics.add.collider(this.player,this.npcs),this.events.on("showMessage",this.showMessage,this),this.time.delayedCall(500,()=>{this.showMessage({text:"Welcome to Pixel Quest! Use arrow keys to move around and explore the town. Press SPACE near NPCs to talk.",color:"#FFFFFF"})})}checkGrassCollision(){for(let e of this.grassZones)if(this.player.x>e.x&&this.player.x<e.x+e.width&&this.player.y>e.y&&this.player.y<e.y+e.height){console.log("Green grass collision detected! Switching to LeetCodeQuestScene..."),this.topic="Array",this.difficulty="easy",this.scene.start("LeetCodeQuestScene",{topic:this.topic,difficulty:this.difficulty}),this.userCoordinates.x=this.player.x+90,this.userCoordinates.y=this.player.y;return}for(let e of this.redGrassZones)if(this.player.x>e.x&&this.player.x<e.x+e.width&&this.player.y>e.y&&this.player.y<e.y+e.height){console.log("Red grass collision detected! Switching to LeetCodeQuestScene..."),this.topic="BST",this.difficulty="hard",this.scene.start("LeetCodeQuestScene",{topic:this.topic,difficulty:this.difficulty}),this.userCoordinates.x=this.player.x+90,this.userCoordinates.y=this.player.y;return}for(let e of this.yellowGrassZones)if(this.player.x>e.x&&this.player.x<e.x+e.width&&this.player.y>e.y&&this.player.y<e.y+e.height){console.log("Yellow grass collision detected! Switching to LeetCodeQuestScene..."),this.topic="Linked List",this.difficulty="medium",this.scene.start("LeetCodeQuestScene",{topic:this.topic,difficulty:this.difficulty}),this.userCoordinates.x=this.player.x+90,this.userCoordinates.y=this.player.y;return}}randomizeGrassZones(){this.greenGraphics.clear(),this.difficulty="easy",this.topic="array",this.grassZones=[];for(let e=0;e<h.Math.Between(2,20);e++){let t=h.Math.Between(875.3333333333337,1575.3333333333296),s=h.Math.Between(1468.4136008177218,1868.4136008177218),i=h.Math.Between(40,80),a=h.Math.Between(40,80);this.grassZones.push({x:t,y:s,width:i,height:a})}this.greenGraphics.fillStyle(65280,1),this.grassZones.forEach(e=>{this.greenGraphics.fillRect(e.x,e.y,e.width,e.height)}),console.log("Green grass zones randomized:",this.grassZones)}randomRedGrass(){this.redGraphics.clear(),this.redGrassZones=[];for(let e=0;e<h.Math.Between(2,20);e++){let t=h.Math.Between(862.3333333333337,988.3333333333296),s=h.Math.Between(249.4136008177218,515.4136008177218),i=h.Math.Between(40,80),a=h.Math.Between(40,80);this.redGrassZones.push({x:t,y:s,width:i,height:a})}this.redGraphics.fillStyle(16711680,1),this.redGrassZones.forEach(e=>{this.redGraphics.fillRect(e.x,e.y,e.width,e.height)}),console.log("Red grass zones randomized:",this.redGrassZones)}randomYellowGrass(){this.yellowGraphics.clear(),this.yellowGrassZones=[];for(let e=0;e<h.Math.Between(2,20);e++){let t=h.Math.Between(1163.5922317655475,1389.6032346285429),s=h.Math.Between(644.4246036807261,794.4246036807268),i=h.Math.Between(40,80),a=h.Math.Between(40,80);this.yellowGrassZones.push({x:t,y:s,width:i,height:a})}this.yellowGraphics.fillStyle(16776960,1),this.yellowGrassZones.forEach(e=>{this.yellowGraphics.fillRect(e.x,e.y,e.width,e.height)}),console.log("Yellow grass zones randomized:",this.yellowGrassZones)}update(e,t){this.handlePlayerMovement(),this.checkGrassCollision(),this.checkNPCProximity(),this.interactionZone.setPosition(this.player.x,this.player.y),this.interactionPrompt.setPosition(this.player.x,this.player.y-50),h.Input.Keyboard.JustDown(this.spaceKey)&&this.checkInteraction(),this.messageVisible&&e>this.messageTimer&&this.hideMessage()}createWorld(){this.map=this.add.image(0,0,"town-map"),this.map.setOrigin(0,0),this.map.setScale(this.mapScale)}createPlayer(){this.player=this.physics.add.sprite(this.userCoordinates.x,this.userCoordinates.y,"player"),this.player.setCollideWorldBounds(!0),this.player.setScale(2),this.player.setSize(12,20),this.player.setOffset(2,16),this.player.setDepth(10),this.player.anims.play("player-idle-down")}setupCamera(){const e=this.map.width*this.mapScale,t=this.map.height*this.mapScale;console.log("Map width:",this.map.width,"Map height:",this.map.height),this.physics.world.setBounds(0,0,e,t),this.cameras.main.setBounds(0,0,e,t),this.cameras.main.startFollow(this.player,!0,.1,.1),this.cameras.main.setZoom(1)}setupInput(){this.cursors=this.input.keyboard.createCursorKeys(),this.spaceKey=this.input.keyboard.addKey(h.Input.Keyboard.KeyCodes.SPACE)}createObstacles(){this.obstacles=this.physics.add.staticGroup();const e=this.map.width*this.mapScale,t=this.map.height*this.mapScale;this.createObstacleRect(0,100,20,t),this.createObstacleRect(0,0,e,32),this.createObstacleRect(0,740,460,140),this.createObstacleRect(470,800,300,140),this.createObstacleRect(450,0,50,500),this.createObstacleRect(730,240,50,500),this.createObstacleRect(790,100,200,10),this.createObstacleRect(790,180,200,10),this.createObstacleRect(1e3,0,10,95),this.createObstacleRect(1e3,200,10,110),this.createObstacleRect(1002,314.30615732761544,190,10),this.createObstacleRect(1210.8543776411702,378.63949066094875,260,10),this.createObstacleRect(1210.8543776411702,318.63949066094875,10,50),this.createObstacleRect(1484.6666666666674,406.08026748439414,10,100),this.createObstacleRect(670,1650.6336580776644,130,140),this.createObstacleRect(170,1430.6336580776644,60,600),this.createObstacleRect(170,1430.6336580776644,400,60),this.createObstacleRect(745,1440.6336580776644,60,300),this.createObstacleRect(810,960,400,40),this.createObstacleRect(810,1180,400,40),this.createObstacleRect(0,2160.633658077664,800,60),this.createObstacleRect(1230.625240354536,871.5980643488132,145,20),this.createObstacleRect(1371.680254669522,870.0168354462705,20,140),this.createObstacleRect(1430.3469213361886,1020.1572875253744,20,280),this.createObstacleRect(1380.3469213361882,1020.1572875253744,50,20),this.createObstacleRect(1380.3469213361882,1289.7165107019268,50,20),this.createObstacleRect(1060.2588984322117,1289.7165107019268,160,20),this.createObstacleRect(1060.2588984322117,1302.0828526242512,20,160),this.createObstacleRect(960.9779942740058,871.5980643488132,430,20),this.createObstacleRect(963.1734606680948,891.5980643488132,20,-300),this.createObstacleRect(800,2200,400,300),this.createObstacleRect(1300,1510.6336580776644,200,200),this.createObstacleRect(1120,1720.6336580776644,150,10),this.createObstacleRect(1020,1780.6336580776644,340,10),this.createObstacleRect(880,1510.6336580776644,200,200),this.createObstacleRect(380,1580.6336580776644,280,280)}createObstacleRect(e,t,s,i){const a=this.add.rectangle(e,t,s,i,0,0);a.setOrigin(0,0),this.showDebugBounds?a.setVisible(!0):a.setVisible(!1),this.obstacles.add(a,!0)}createNPCs(){this.npcs=this.physics.add.staticGroup(),this.createNPC(1250,1460,"Mayor","Just like how a dictionary allows quick lookups, HashMaps in programming provide efficient key-value pair searching!",0),this.createNPC(830,1460,"Shopkeeper","Finding the right item in a shop is like Binary Search—efficient and fast when everything is sorted!",1),this.createNPC(330,1530,"Farmer","A well-structured farm, like a Binary Tree, ensures everything is organized for quick access and growth!",2),this.createNPC(400,50,"Guard","Just like a stack, guards handle threats in a Last-In-First-Out manner—dealing with the most recent danger first!",3),this.createNPC(1323.785113019775,2305.710678118657,"Woodcutter","Array",4),this.createNPC(1e3,2700,"Fisher",'"Learning to code is like fishing—you need patience, the right tools, and practice to master it!"',5),this.createNPC(420,750,"Miner","The mountains contain valuable minerals. We've been mining here for generations.",6),this.createNPC(1e3,2e3,"Traveler","An array is like a road—you can travel to any point directly if you know the index (position)!",7)}createNPC(e,t,s,i,a=0,d){const r=this.physics.add.staticSprite(e,t,"nerdnpecs",a);if(r.setScale(2),r.setDepth(5),d&&r.setData("educationalContent",d),r.setData("name",s),r.setData("dialog",i),r.setSize(12,12),r.setOffset(24,40),this.showDebugBounds){const c=r.getBounds(),n=this.add.rectangle(c.x,c.y,c.width,c.height,0,0);n.setStrokeStyle(2,65280),r.setData("debugRect",n)}return this.npcs.add(r),console.log(`Created NPC ${s} at ${e}, ${t} with frame ${a}`),r}createMessageDisplay(){const e=this.cameras.main.width,t=100;this.messageBox=this.add.rectangle(e/2,this.cameras.main.height-t/2,e-40,t-20,0,.7),this.messageBox.setStrokeStyle(2,16777215),this.messageBox.setScrollFactor(0),this.messageBox.setDepth(100),this.messageBox.setVisible(!1),this.messageText=this.add.text(e/2,this.cameras.main.height-t/2,"",{fontFamily:"Arial",fontSize:"18px",color:"#ffffff",align:"center",wordWrap:{width:e-80}}),this.messageText.setOrigin(.5),this.messageText.setScrollFactor(0),this.messageText.setDepth(101),this.messageText.setVisible(!1)}showMessage(e){this.messageBox.setVisible(!0),this.messageText.setVisible(!0),this.messageText.setText(e.text),this.messageText.setColor(e.color||"#ffffff"),this.registry.get("setQ"),this.messageTimer=this.time.now+5e3,this.messageVisible=!0,console.log("Showing message:",e.text)}hideMessage(){this.messageBox.setVisible(!1),this.messageText.setVisible(!1),this.messageVisible=!1}handlePlayerMovement(){this.player.setVelocity(0);let e=!1,t=this.currentPlayerDirection;this.cursors.left.isDown?(this.player.setVelocityX(-this.speed),e=!0,t="left",console.log(this.player.x,this.player.y)):this.cursors.right.isDown&&(this.player.setVelocityX(this.speed),e=!0,t="right",console.log(this.player.x,this.player.y)),this.cursors.up.isDown?(this.player.setVelocityY(-this.speed),e=!0,t="up"):this.cursors.down.isDown&&(this.player.setVelocityY(this.speed),e=!0,t="down"),this.player.body.velocity.x!==0&&this.player.body.velocity.y!==0&&this.player.body.velocity.normalize().scale(this.speed),e?this.player.play(`player-walk-${t}`,!0):this.player.play(`player-idle-${t}`,!0),this.currentPlayerDirection=t,this.showDebugBounds&&this.npcs.getChildren().forEach(s=>{const i=s.getData("debugRect");if(i){const a=s.getBounds();i.setPosition(a.x,a.y),i.setSize(a.width,a.height)}})}async checkInteraction(){let e=this.player.x,t=this.player.y;const s=32;this.currentPlayerDirection==="left"?e-=s:this.currentPlayerDirection==="right"?e+=s:this.currentPlayerDirection==="up"?t-=s:this.currentPlayerDirection==="down"&&(t+=s);const i=new h.Geom.Circle(e,t,40);if(this.showDebugBounds){const d=this.add.circle(e,t,40,16776960,.3);this.time.delayedCall(500,()=>{d.destroy()})}let a=!1;for(const d of this.npcs.getChildren()){const r=d;if(h.Geom.Circle.ContainsPoint(i,r)){const c=r.getData("name");let y=r.getData("dialog").split(":");console.log(y);let l=y[0];console.log(l),console.log(l.split(" ")),l=l.split(" "),console.log(l.length==1),l.length==1&&(y=await D(l)),this.showMessage({text:`${c}: ${y}`,color:"#FFFFFF"});const u=this.player.x-r.x,m=this.player.y-r.y;Math.abs(u)>Math.abs(m)?u>0?(r.play("player-idle-right"),r.setData("direction","right")):(r.play("player-idle-left"),r.setData("direction","left")):m>0?(r.play("player-idle-down"),r.setData("direction","down")):(r.play("player-idle-up"),r.setData("direction","up")),a=!0;break}}if(a||(this.isNearWater(e,t)?this.showMessage({text:"The water looks refreshing and clear.",color:"#FFFFFF"}):this.isNearBuilding(e,t)?this.showMessage({text:"This building seems important to the town.",color:"#FFFFFF"}):this.isNearTrees(e,t)&&this.showMessage({text:"The trees sway gently in the breeze.",color:"#FFFFFF"})),this.interactionKey.isDown&&!this.messageVisible){const d=this.player.getBounds();this.npcs.getChildren().forEach(r=>{const c=r,n=c.getBounds();if(h.Geom.Rectangle.Overlaps(d,n)){const y=c.frame.name,l=c.texture.key;this.handleNPCInteraction(c),c.setTexture(l,y)}})}}handleNPCInteraction(e){const t=e.getData("name");e.getData("dialog");const s=e.frame.name;this.showMessage({text:"it should be working-handle interaction",color:"#ffff"});const i=e.texture.key;console.log(`Interacted with ${t}, using texture: ${i}, frame: ${s}`),setTimeout(()=>{(e.texture.key!==i||e.frame.name!==s)&&(console.log(`Restoring NPC ${t} to texture: ${i}, frame: ${s}`),e.setTexture(i,s))},100)}isNearWater(e,t){return this.map.width*this.mapScale,this.map.height*this.mapScale,e>640&&e<800&&t>160&&t<360||e>128&&e<288&&t>528&&t<600||e>32&&e<128&&t>288&&t<384}isNearBuilding(e,t){return e>1200&&e<1500&&t>1400&&t<1700||e>780&&e<980&&t>1400&&t<1700||e>280&&e<480&&t>1480&&t<1780}isNearTrees(e,t){const s=this.map.width*this.mapScale,i=this.map.height*this.mapScale;return e>700&&e<900&&t>2100&&t<2300||e<32||e>s-32||t<32||t>i-32}toggleDebugBounds(){this.showDebugBounds=!this.showDebugBounds,this.obstacles.getChildren().forEach(e=>{const t=e;this.showDebugBounds?(t.setStrokeStyle(2,16711680),t.setVisible(!0)):t.setVisible(!1)}),this.npcs.getChildren().forEach(e=>{const t=e.getData("debugRect");t&&t.setVisible(this.showDebugBounds)})}}export{G as WorldScene};
