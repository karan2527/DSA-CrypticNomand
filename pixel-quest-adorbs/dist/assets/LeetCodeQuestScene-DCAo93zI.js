var O=Object.defineProperty;var E=(a,o,t)=>o in a?O(a,o,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[o]=t;var s=(a,o,t)=>E(a,typeof o!="symbol"?o+"":o,t);import{g as P}from"./index-Cs6O3ldV.js";class H extends Phaser.Scene{constructor(t){super({key:"LeetCodeQuestScene"});s(this,"battleImage");s(this,"mapScale",.7);s(this,"topic");s(this,"difficulty");s(this,"questionData",{});s(this,"scrollContainer");s(this,"mask");s(this,"scrollableHeight",0);s(this,"scrolling",!1);s(this,"lastY",0);this.topic=(t==null?void 0:t.topic)||"Arrays",this.difficulty=(t==null?void 0:t.difficulty)||"easy"}init(t){t.topic&&(this.topic=t.topic),t.difficulty&&(this.difficulty=t.difficulty)}preload(){this.load.image("battle","/Battle.png"),this.load.spritesheet("player","assets/player.png",{frameWidth:0,frameHeight:0})}create(){console.log("LeetCodeQuestScene create starting"),console.log(`Loading ${this.difficulty} question about ${this.topic}`);const t=this.add.graphics();t.fillStyle(0,1),t.fillRectShape(new Phaser.Geom.Rectangle(0,0,this.scale.width,this.scale.height)),this.createWorld();const e=this.add.text(this.scale.width/2,this.scale.height/2,"Loading challenge...",{fontSize:"20px",color:"#ffffff"}).setOrigin(.5);this.loadQuestion(e),console.log("LeetCodeQuestScene create complete")}createWorld(){this.battleImage=this.add.image(this.scale.width/2,this.scale.height,"battle"),this.battleImage.setOrigin(.5,1),this.battleImage.setScale(this.mapScale)}async loadQuestion(t){try{let e=await P(this.topic,this.difficulty);e.includes("```")&&(e=e.replace(/```json\s*/g,""),e=e.replace(/```\s*/g,""));const i=JSON.parse(e);console.log(i),console.log("Parsed data:",this.questionData),this.registry.get("setQ")(i),console.log("working"),t.destroy(),this.createQuestionScene(i)}catch(e){console.error("Failed to load question:",e),t.setText(`Failed to load question.
Press SPACE to return.`),this.input.keyboard.on("keydown-SPACE",()=>{this.scene.start("WorldScene")})}}createQuestionScene(t){const e=this.add.rectangle(this.scale.width/2,this.scale.height/2,this.scale.width*.8,this.scale.height*.7,2236962,.9),i=e.width,l=e.height,r=e.x-i/2,h=e.y-l/2,c=this.add.graphics();c.fillStyle(0),c.fillRect(r+20,h+100,i-40,l-170),this.add.rectangle(r+20+(i-40)/2,h+100+(l-170)/2,i-40,l-170,1118481),this.mask=new Phaser.Display.Masks.GeometryMask(this,c),this.scrollContainer=this.add.container(r+30,h+100),this.scrollContainer.setMask(this.mask);const F=this.add.text(this.scale.width/2,h+30,"LeetCode Challenge",{fontSize:"24px",color:"#ffffff",fontStyle:"bold"}).setOrigin(.5),w={easy:"#4CAF50",medium:"#FF9800",hard:"#F44336"}[t.difficulty]||"#4CAF50",g=this.add.text(this.scale.width/2,F.y+50,t.title,{fontSize:"20px",color:w,fontStyle:"bold"}).setOrigin(.5);this.add.text(g.x+g.width/2+20,g.y,t.difficulty.toUpperCase(),{fontSize:"12px",color:"#FFFFFF",backgroundColor:w,padding:{x:8,y:4}}).setOrigin(0,.5);const C=this.add.text(0,0,t.description,{fontSize:"16px",color:"#ffffff",wordWrap:{width:i-60}});this.scrollContainer.add(C);const k=`Example:

Input: ${t.example.input}
Output: ${t.example.output}
Explanation: ${t.example.explanation}`,y=this.add.text(0,C.height+30,k,{fontSize:"16px",color:"#FFD700",wordWrap:{width:i-60}});this.scrollContainer.add(y);let u=y.y+y.height+20;if(t.tags&&t.tags.length>0){const n=this.add.text(0,u,`Tags: ${Array.isArray(t.tags)?t.tags.join(", "):t.tags}`,{fontSize:"14px",color:"#9E9E9E"});this.scrollContainer.add(n),u=n.y+n.height+20}this.scrollableHeight=u;const m=l-170;this.scrollableHeight>m&&this.add.text(r+i-30,h+120,"↕️ Scroll",{fontSize:"14px",color:"#9E9E9E"}).setOrigin(1,0);const x=h+l-40,S=this.add.rectangle(this.scale.width/2-100,x,180,50,5025616).setInteractive();this.add.text(S.x,S.y,"Solve Challenge",{fontSize:"16px",color:"#ffffff"}).setOrigin(.5);const f=this.add.rectangle(this.scale.width/2+100,x,120,50,6323595).setInteractive();if(this.add.text(f.x,f.y,"Skip",{fontSize:"16px",color:"#ffffff"}).setOrigin(.5),t.hints&&t.hints.length>0){const n=this.add.rectangle(this.scale.width/2,x-60,120,40,2201331).setInteractive(),b=this.add.text(n.x,n.y,"Show Hint",{fontSize:"14px",color:"#ffffff"}).setOrigin(.5);let d=0,p=null;n.on("pointerdown",()=>{p&&(p.destroy(),p=null),d<t.hints.length&&(p=this.add.text(this.scale.width/2,n.y+30,t.hints[d],{fontSize:"14px",color:"#FFEB3B",backgroundColor:"#333333",padding:{x:10,y:5},wordWrap:{width:i*.6}}).setOrigin(.5,0),d++,d>=t.hints.length?b.setText("No more hints"):b.setText(`Hint ${d}/${t.hints.length}`))})}S.on("pointerdown",()=>{console.log("Solving challenge:",t.title),this.scene.start("EditorScene",{questionData:t,returnScene:"LeetCodeQuestScene",topic:this.topic,difficulty:this.difficulty})}),f.on("pointerdown",()=>{console.log("Skipping challenge"),this.scene.start("WorldScene")}),this.input.keyboard.on("keydown-SPACE",()=>{f.emit("pointerdown")}),this.setupScrolling(m)}setupScrolling(t){this.input.on("wheel",(e,i,l,r,h)=>{if(this.scrollableHeight>t){const c=Phaser.Math.Clamp(this.scrollContainer.y-r,t-this.scrollableHeight+100,100);this.scrollContainer.y=c}}),this.input.on("pointerdown",e=>{e.y>100&&e.y<this.scale.height-100&&(this.scrolling=!0,this.lastY=e.y)}),this.input.on("pointermove",e=>{if(this.scrolling&&this.scrollableHeight>t){const i=e.y-this.lastY,l=Phaser.Math.Clamp(this.scrollContainer.y+i,t-this.scrollableHeight+100,100);this.scrollContainer.y=l,this.lastY=e.y}}),this.input.on("pointerup",()=>{this.scrolling=!1}),this.input.keyboard.on("keydown-UP",()=>{if(this.scrollableHeight>t){const e=Phaser.Math.Clamp(this.scrollContainer.y-20,t-this.scrollableHeight,0);this.scrollContainer.y=e}}),this.input.keyboard.on("keydown-DOWN",()=>{if(this.scrollableHeight>t){const e=Phaser.Math.Clamp(this.scrollContainer.y-20,t-this.scrollableHeight+100,100);this.scrollContainer.y=e}})}}export{H as LeetCodeQuestScene};
